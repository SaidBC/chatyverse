// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int             @id @default(autoincrement())
  username           String          @unique
  email              String          @unique
  password           String
  messages           Message[]
  birthday           DateTime?
  location           String?
  bio                String?
  profilePicture     String?
  sentToFriends      FriendRequest[] @relation("sender")
  receivedFromFiends FriendRequest[] @relation("receiver")
  friends            User[]          @relation("friends")
  friendsOf          User[]          @relation("friends")
  createdAt          DateTime        @default(now())
  updatedAt          DateTime        @updatedAt
}

model FriendRequest {
  id         String   @id @default(uuid())
  receiverId Int
  receiver   User     @relation("receiver", fields: [receiverId], references: [id])
  senderId   Int
  sender     User     @relation("sender", fields: [senderId], references: [id])
  status     STATUS   @default(REQUETED)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

enum STATUS {
  ACCEPTED
  DECLINED
  REQUETED
  CANCELED
}

model Message {
  id         String   @id @default(uuid())
  author     User     @relation(fields: [authorId], references: [id])
  authorId   Int
  receiverId Int
  content    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
